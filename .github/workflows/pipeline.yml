name: Project K3s Monitoring CI/CD Pipeline

on: [push]

jobs:
  build-deploy-monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: Check Docker version
        run: docker --version

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and tag monitoring Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/monitoring-app:1.0 .

      - name: Trivy Scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKER_USERNAME }}/monitoring-app:1.0'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
          ignore-unfixed: true

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/monitoring-app:1.0

      - name: Install K3s (if not already installed)
        run: |
          if ! command -v k3s &> /dev/null; then
            curl -sfL https://get.k3s.io | sh -
          else
            echo "K3s already installed"
          fi
        sudo: true

      - name: Export kubeconfig
        run: |
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          echo "KUBECONFIG=/etc/rancher/k3s/k3s.yaml" >> $GITHUB_ENV
        sudo: true

      - name: Install Helm (if needed)
        run: |
          if ! command -v helm &> /dev/null; then
            curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          fi

      - name: Run monitoring install.sh script
        run: |
          chmod +x install.sh
          ./install.sh

      - name: Wait for monitoring pods to be ready
        run: |
          kubectl wait --for=condition=Ready pods --all -n project-monitoring --timeout=180s
          kubectl get pods -n project-monitoring

      - name: Test access to Grafana or Prometheus NodePort (optional)
        run: |
          echo "Testing access to NodePort (example on port 30090)..."
          curl -s http://localhost:30090 || echo "Port not accessible"

      - name: Run monitoring uninstall.sh script
        run: |
          chmod +x uninstall.sh
          ./uninstall.sh
