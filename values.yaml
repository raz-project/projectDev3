namespace: project-monitoring

replicaCount: 1

image:
  repository: nginx
  tag: latest

serviceAccount:
  create: true
  automount: true

service:
  type: NodePort
  port: 8085
  nodePort: 32233

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

nodeSelector: {}
tolerations: []
affinity: {}

kube-prometheus-stack:
  namespaceOverride: project-monitoring
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      retention: 12h
      resources:
        requests:
          cpu: 150m
          memory: 750Mi
        limits:
          cpu: 500m
          memory: 2Gi
    service:
      type: NodePort
      nodePort: 30900

  grafana:
    enabled: true
    adminPassword: admin
    service:
      type: NodePort
      nodePort: 30901
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards

  alertmanager:
    enabled: true
    service:
      type: NodePort
      nodePort: 30902
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['job']
        group_wait: 10s
        group_interval: 5m
        repeat_interval: 4h
        receiver: 'null'
      receivers:
        - name: 'null'
